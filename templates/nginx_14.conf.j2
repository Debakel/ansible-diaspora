# {{ ansible_managed }}
# for Ubuntu 14.04
user www-data;
worker_processes 4;
pid /var/run/nginx.pid;

events {
    worker_connections 768;
    # multi_accept on;
}

http {

    ##
    # Basic Settings
    ##

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    # server_tokens off;

    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # Logging Settings
    ##

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    ##
    # Gzip Settings
    ##

    gzip on;
    gzip_disable "msie6";

    # gzip_vary on;
    # gzip_proxied any;
    # gzip_comp_level 6;
    # gzip_buffers 16 8k;
    # gzip_http_version 1.1;
    # gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    ##
    # nginx-naxsi config
    ##
    # Uncomment it if you installed nginx-naxsi
    ##

    #include /etc/nginx/naxsi_core.rules;

    ##
    # nginx-passenger config
    ##
    # Uncomment it if you installed nginx-passenger
    ##
    
    #passenger_root /usr;
    #passenger_ruby /usr/bin/ruby;

    ##
    # Virtual Host Configs
    ##

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;

    # based on https://gist.github.com/jhass/1355430
    # This vhost just redirects to HTTPS
    server {
        # If your host is not IPv6 ready use listen 80; here.
        # Add ipv6only=off to your listen directive that has default_server.
        # Or this one if this is your only vhost. Do not add it to both!
        listen 80;
        server_name {{ diaspora_url }} www.{{ diaspora_url }};
        rewrite ^/(.*) https://{{ diaspora_url }}/$1 permanent;
    }

    server {
        listen 443 ssl;  # Same rules as for listen [::]:80 apply.
        server_name www.{{ diaspora_url }};
        rewrite ^/(.*) https://{{ diaspora_url }}/$1 permanent;
        # SSL setup
        # This file should also include any necessary intermediate certificates
        # For example for StartSSL that would be https://www.startssl.com/certs/class1/sha2/pem/sub.class1.server.sha2.ca.pem
        ssl_certificate {{ diaspora_ssl_certificate_path }}/{{ diaspora_url }}.crt;
        ssl_certificate_key {{ diaspora_ssl_certificate_key_path }}/{{ diaspora_url }}.key;
        # Taken from https://wiki.mozilla.org/Security/Server_Side_TLS
        # generate with openssl dhparam 2048 > /path/to/dhparam.pem
        ssl_dhparam {{ diaspora_dhparam_file }};
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128:AES256:AES:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK';
        ssl_session_timeout 5m;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:50m;
    }

    # Actual proxy
    server {
	# http://linux.ioerror.us/2014/10/do-you-need-separate-ipv4-and-ipv6-listen-directives-in-nginx/
        listen 443 ssl; 
        server_name {{ diaspora_url }};
        root {{ diaspora_public_dir }};
        # Configure maximum picture size
        # Note that Diaspora has a client side check set at 4M
        client_max_body_size 5M;
        # SSL setup
        # This file should also include any necessary intermediate certificates
        # For example for StartSSL that would be https://www.startssl.com/certs/class1/sha2/pem/sub.class1.server.sha2.ca.pem
        ssl_certificate {{ diaspora_ssl_certificate_path }}/{{ diaspora_url }}.crt;
        ssl_certificate_key {{ diaspora_ssl_certificate_key_path }}/{{ diaspora_url }}.key;
        # Taken from https://wiki.mozilla.org/Security/Server_Side_TLS
        # You might want to make these global
        # generate with openssl dhparam 2048 > /path/to/dhparam.pem
        ssl_dhparam {{ diaspora_dhparam_file }};
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128:AES256:AES:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK';
        ssl_session_timeout 5m;
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:50m;
        # Proxy if requested file not found
        try_files $uri @diaspora;
        location @diaspora {
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_pass http://diaspora_server;
        }
    }
    # Proxy destination
    # Add as many server directives as you want
    # Also takes a socket, like unix:/path/to/some/socket.sock
    upstream diaspora_server {
        server 127.0.0.1:3000;
    }
}
